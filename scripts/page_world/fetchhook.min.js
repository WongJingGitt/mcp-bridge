!function(e){if(e.RealFetch)return;if("function"!=typeof e.fetch)return;e.RealFetch=e.fetch,e.hookFetch=function(t){if(e.fetch.__hooked)return;if(!t)return;e.fetch=async function(n,o){let r,s;if(n instanceof Request){const i=n.clone();r=i.url;const a=new Headers;for(const[e,t]of i.headers.entries())a.append(e,t);let c=null;try{const e=i.headers.get("content-type");c=e&&e.includes("application/json")?await i.json():e&&e.includes("text")?await i.text():e&&e.includes("form")?await i.formData():await i.blob()}catch(e){console.warn("Body clone error:",e)}s={method:i.method,headers:a,body:c,mode:i.mode,credentials:i.credentials,cache:i.cache,redirect:i.redirect,referrer:i.referrer,integrity:i.integrity,keepalive:i.keepalive,signal:i.signal}}else r=n,s=o?{...o,headers:o.headers?new Headers(o.headers):void 0}:{};try{"function"==typeof t.urlHook&&(r=await t.urlHook.call(this,r)),"function"==typeof t.optionsHook&&(s=await t.optionsHook.call(this,s,r))}catch(e){console.error("Hook error:",e)}let i;try{i=await e.RealFetch(r,s)}catch(n){throw n}return"function"==typeof t.responseHook?await t.responseHook.call(this,i):i},e.fetch.__hooked=!0},e.unHookFetch=function(){e.RealFetch&&(delete e.fetch.__hooked,e.fetch=e.RealFetch,e.RealFetch=void 0)}}(window);